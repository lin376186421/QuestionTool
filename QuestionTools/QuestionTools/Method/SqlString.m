//
//  SqlString.m
//  333
//
//  Created by cheng on 2017/7/25.
//  Copyright © 2017年 Chelun. All rights reserved.
//

#import "SqlString.h"

@implementation SqlString

+ (NSString *)kecheId
{
    return @"10805000, 10805100";
}

+ (NSString *)keyunId
{
    return @"6702,6108,6421,6834,6645,6172,6861,6370,6624,6710,6597,6598,6386,6865,6709,6398,6483,6368,6863,6332,6585,6402,6420,6375,6396,6399,6697,6167,6516,6550,6255,6854,6609,6419,6437,6521,6545,6263,6314,6860,6869,6652,6422,6373,6393,6394,6698,6515,6484,6300,6488,6554,6556,6326,6299,6714,6204,6751,6639,6024,6577,6092,6098,5994,5996,5997,5998,5999,6000,6001,6002,6003,6004,6005,6006,6008,6009,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6025,6026,6027,6028,6029,6030,6031,6033,6034,6035,6036,6037,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6093,6094,6095,6096,6097,6100,6101,6102,6103,6104,6105,6106,6107,6109,6110,6111,6113,6114,6115,6116,6117,6118,6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,6132,6133,6134,6135,6136,6137,6138,6139,6140,6141,6142,6143,6144,6145,6146,6147,6148,6149,6150,6151,6152,6153,6156,6157,6158,6159,6160,6161,6162,6163,6164,6165,6166,6168,6169,6170,6171,6173,6174,6175,6176,6177,6178,6179,6180,6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196,6197,6198,6199,6200,6201,6202,6203,6205,6206,6207,6208,6209,6210,6211,6212,6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229,6230,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243,6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,6254,6256,6257,6259,6260,6261,6262,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275,6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,6286,6287,6288,6289,6290,6291,6292,6293,6294,6295,6296,6297,6301,6303,6304,6305,6306,6307,6308,6309,6310,6311,6312,6313,6315,6316,6317,6318,6319,6320,6321,6322,6323,6324,6325,6327,6328,6329,6330,6331,6334,6335,6336,6337,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349,6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,6364,6365,6366,6367,6369,6371,6372,6374,6376,6377,6378,6380,6381,6382,6383,6384,6385,6387,6388,6389,6390,6391,6392,6395,6397,6400,6401,6403,6404,6405,6406,6407,6408,6409,6410,6411,6412,6413,6414,6415,6416,6417,6418,6423,6424,6425,6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6438,6439,6440,6441,6442,6443,6444,6446,6447,6448,6449,6451,6452,6453,6454,6455,6456,6457,6458,6459,6460,6461,6462,6463,6464,6465,6466,6468,6469,6470,6471,6472,6473,6474,6475,6476,6477,6478,6479,6480,6481,6482,6485,6486,6487,6489,6490,6491,6492,6493,6494,6495,6496,6497,6498,6499,6500,6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6517,6518,6519,6520,6522,6523,6524,6525,6526,6528,6529,6530,6531,6532,6533,6534,6535,6536,6537,6538,6539,6540,6541,6542,6543,6544,6546,6549,6551,6552,6553,6555,6557,6558,6559,6560,6561,6562,6563,6564,6565,6567,6568,6569,6570,6571,6572,6573,6574,6575,6578,6579,6580,6581,6582,6583,6586,6587,6588,6589,6590,6591,6592,6593,6594,6595,6596,6599,6600,6601,6602,6603,6604,6605,6606,6607,6608,6610,6611,6612,6613,6614,6615,6616,6617,6619,6620,6621,6622,6623,6625,6626,6627,6628,6629,6630,6631,6632,6633,6634,6635,6636,6637,6638,6640,6641,6642,6643,6644,6647,6648,6649,6650,6651,6653,6654,6655,6656,6657,6658,6659,6660,6661,6662,6663,6664,6665,6666,6667,6668,6669,6670,6671,6672,6673,6674,6675,6676,6678,6679,6680,6681,6682,6683,6684,6686,6687,6688,6689,6690,6691,6692,6694,6695,6696,6700,6701,6704,6705,6706,6711,6712,6713,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6729,6730,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6795,6796,6797,6798,6802,6803,6804,6805,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6822,6823,6824,6825,6827,6828,6829,6832,6833,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6848,6850,6851,6853,6855,6856,6858,6862,6867,6868,6870,6871,6872,6873,6874,6875";
}

+ (NSString *)huoyunId
{
    return @"5728,5727,5617,5580,5329,5377,5433,5610,5655,5368,5616,5645,5412,5364,5615,5703,5374,5679,5712,5383,5495,5618,5600,5623,5593,5361,5503,5504,5543,5549,5460,5302,5601,5320,5620,5641,5414,5283,5285,5286,5287,5288,5290,5291,5292,5293,5294,5295,5297,5299,5304,5306,5307,5308,5309,5310,5313,5315,5316,5317,5319,5321,5324,5325,5326,5327,5328,5330,5332,5333,5335,5337,5338,5341,5343,5346,5347,5349,5351,5352,5358,5359,5360,5362,5365,5367,5370,5372,5375,5378,5386,5392,5394,5395,5396,5397,5399,5401,5402,5403,5404,5405,5406,5407,5409,5411,5419,5425,5427,5428,5429,5431,5442,5450,5451,5455,5456,5458,5459,5461,5462,5463,5464,5465,5466,5467,5468,5470,5471,5472,5473,5474,5476,5481,5482,5483,5484,5485,5486,5487,5488,5491,5492,5493,5494,5496,5497,5499,5500,5501,5502,5505,5506,5507,5508,5509,5510,5511,5512,5513,5515,5516,5518,5519,5520,5521,5522,5523,5524,5525,5526,5527,5529,5530,5531,5532,5533,5534,5536,5539,5541,5542,5544,5545,5546,5547,5548,5550,5551,5552,5555,5571,5576,5589,5592,5594,5596,5605,5609,5613,5624,5637,5657,5660,5672,5675,5676,5686,5695,5701,5702,5705,5706,5709,5711,5735,5759,5761,5762,5763,5770,5772,5809,5817,5838,5876,5940,5962";
}

+ (NSString *)sqlWithIdString:(NSString *)idStr
{
    if (idStr.length) {
        NSArray *array = [idStr componentsSeparatedByString:@","];
        NSLog(@"id count = %zd", array.count);
        return [NSString stringWithFormat:@"select * from Q.dt_question where id in (%@)", idStr];
    }
    
    return nil;
}

+ (NSString *)sqlWithQIdString:(NSString *)idStr
{
    if (idStr.length) {
        NSArray *array = [idStr componentsSeparatedByString:@","];
        NSLog(@"id count = %zd", array.count);
        return [NSString stringWithFormat:@"select * from Q.dt_question where question_id in (%@)", idStr];
    }
    
    return nil;
}

+ (NSString *)sqlWithIndex:(NSInteger)index
{
    NSString *sql = nil;
    switch (index) {
        case 0:
            sql = [self sqlWithQIdString:[self kecheId]];
            break;
        case 1:
            sql = [self sqlWithIdString:[self keyunId]];
            break;
        case 2:
            sql = [self sqlWithIdString:[self huoyunId]];
            break;
        case 3:
//            sql = [NSString stringWithFormat:@"select * from Q.dt_question where "];
            break;
        default:
            break;
    }
    return sql;
}

@end
